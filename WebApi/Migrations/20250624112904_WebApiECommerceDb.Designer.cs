// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Data;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250624112904_WebApiECommerceDb")]
    partial class WebApiECommerceDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientDisplayName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ManagerComments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ManagerId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MasterComments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MasterId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("ProblemDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientDisplayName = "ООО 'МеталлПрофиль'",
                            ClientId = "client_metalprofile_id",
                            Cost = 15000m,
                            CreatedDate = new DateTime(2024, 5, 2, 10, 30, 0, 0, DateTimeKind.Utc),
                            ManagerComments = "Необходим полный капитальный ремонт, согласовано с клиентом.",
                            ManagerId = "manager_john_doe_id",
                            MasterId = "master_alex_smith_id",
                            OrderNumber = "ORD01",
                            ProblemDescription = "Дизельный двигатель Д-240: Снижение мощности, повышенный расход топлива",
                            StartDate = new DateTime(2024, 5, 3, 9, 0, 0, 0, DateTimeKind.Utc),
                            StatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClientDisplayName = "ЧУП 'ГидроПрессСервис'",
                            ClientId = "client_hydropress_id",
                            Cost = 1200m,
                            CreatedDate = new DateTime(2024, 5, 11, 12, 0, 0, 0, DateTimeKind.Utc),
                            ManagerComments = "Диагностика показала необходимость замены уплотнений.",
                            ManagerId = "manager_jane_doe_id",
                            MasterComments = "Начаты работы по замене гидравлических уплотнений.",
                            MasterId = "master_bob_johnson_id",
                            OrderNumber = "ORD02",
                            ProblemDescription = "Гидравлический пресс П3236: Неисправность гидравлической системы, утечка масла.",
                            StartDate = new DateTime(2024, 5, 12, 10, 0, 0, 0, DateTimeKind.Utc),
                            StatusId = 2
                        },
                        new
                        {
                            Id = 3,
                            ClientDisplayName = "ОАО 'СтройМаш'",
                            ClientId = "client_stroymash_id",
                            CompletionDate = new DateTime(2024, 5, 16, 15, 0, 0, 0, DateTimeKind.Utc),
                            Cost = 300m,
                            CreatedDate = new DateTime(2024, 5, 16, 9, 0, 0, 0, DateTimeKind.Utc),
                            ManagerComments = "Заточка выполнена, инструмент готов к выдаче.",
                            ManagerId = "manager_john_doe_id",
                            MasterComments = "Заточка произведена по ГОСТ.",
                            MasterId = "master_alex_smith_id",
                            OrderNumber = "ORD03",
                            ProblemDescription = "Токарный станок 1К62: Требуется заточка резцов.",
                            StartDate = new DateTime(2024, 5, 16, 11, 0, 0, 0, DateTimeKind.Utc),
                            StatusId = 3
                        },
                        new
                        {
                            Id = 4,
                            ClientDisplayName = "УП 'ПромКомплект'",
                            ClientId = "client_promkomplekt_id",
                            Cost = 8000m,
                            CreatedDate = new DateTime(2024, 6, 6, 9, 15, 0, 0, DateTimeKind.Utc),
                            ManagerComments = "Ожидаем поступление запчастей для редуктора.",
                            ManagerId = "manager_jane_doe_id",
                            MasterId = "master_bob_johnson_id",
                            OrderNumber = "ORD04",
                            ProblemDescription = "Подъемный кран РДК-25: Износ редуктора, повышенный шум при работе.",
                            StatusId = 1
                        },
                        new
                        {
                            Id = 5,
                            ClientDisplayName = "КФХ 'АгроТех'",
                            ClientId = "client_agrotech_id",
                            Cost = 700m,
                            CreatedDate = new DateTime(2024, 6, 21, 11, 0, 0, 0, DateTimeKind.Utc),
                            ManagerId = "manager_john_doe_id",
                            MasterComments = "Начата дефектовка подшипникового узла.",
                            MasterId = "master_alex_smith_id",
                            OrderNumber = "ORD05",
                            ProblemDescription = "Насос центробежный НЦ-500: Неисправность, требуется дефектовка для определения причины.",
                            StartDate = new DateTime(2024, 6, 22, 9, 0, 0, 0, DateTimeKind.Utc),
                            StatusId = 2
                        },
                        new
                        {
                            Id = 6,
                            ClientDisplayName = "ИП Иванов И.И.",
                            ClientId = "client_ivanov_id",
                            Cost = 2500m,
                            CreatedDate = new DateTime(2024, 6, 23, 10, 0, 0, 0, DateTimeKind.Utc),
                            ManagerComments = "Требуются сварочные работы и усиление рамы.",
                            ManagerId = "manager_john_doe_id",
                            MasterId = "master_bob_johnson_id",
                            OrderNumber = "ORD06",
                            ProblemDescription = "Металлоконструкция (Рама станка): Обнаружена трещина в несущей раме.",
                            StatusId = 1
                        },
                        new
                        {
                            Id = 7,
                            ClientDisplayName = "ОДО 'ЭлектроСистемы'",
                            ClientId = "client_electrosys_id",
                            Cost = 6000m,
                            CreatedDate = new DateTime(2024, 6, 19, 14, 0, 0, 0, DateTimeKind.Utc),
                            ManagerComments = "Перепрошивка и тестирование контроллера.",
                            ManagerId = "manager_jane_doe_id",
                            MasterComments = "Выявлены программные ошибки, выполняется отладка.",
                            MasterId = "master_alex_smith_id",
                            OrderNumber = "ORD07",
                            ProblemDescription = "Промышленный контроллер Siemens S7-1200: Сбой в работе, ошибки программы.",
                            StartDate = new DateTime(2024, 6, 20, 9, 0, 0, 0, DateTimeKind.Utc),
                            StatusId = 2
                        },
                        new
                        {
                            Id = 8,
                            ClientDisplayName = "ЗАО 'Автоматика'",
                            ClientId = "client_automatika_id",
                            CompletionDate = new DateTime(2024, 6, 13, 16, 0, 0, 0, DateTimeKind.Utc),
                            Cost = 900m,
                            CreatedDate = new DateTime(2024, 6, 12, 11, 0, 0, 0, DateTimeKind.Utc),
                            ManagerComments = "Калибровка выполнена, датчик соответствует эталонным показаниям.",
                            ManagerId = "manager_john_doe_id",
                            MasterComments = "Проведена калибровка по всем точкам, отчет сформирован.",
                            MasterId = "master_bob_johnson_id",
                            OrderNumber = "ORD08",
                            ProblemDescription = "Датчик давления Rosemount 3051: Показания неточные, требуется калибровка.",
                            StartDate = new DateTime(2024, 6, 13, 9, 0, 0, 0, DateTimeKind.Utc),
                            StatusId = 3
                        },
                        new
                        {
                            Id = 9,
                            ClientDisplayName = "СП 'РемСтройМаш'",
                            ClientId = "client_remstroymash_id",
                            CompletionDate = new DateTime(2024, 4, 15, 10, 0, 0, 0, DateTimeKind.Utc),
                            Cost = 85000m,
                            CreatedDate = new DateTime(2024, 4, 12, 16, 0, 0, 0, DateTimeKind.Utc),
                            ManagerComments = "Договор купли-продажи подписан, оплата получена. Готов к отгрузке.",
                            ManagerId = "manager_jane_doe_id",
                            OrderNumber = "ORD09",
                            ProblemDescription = "Покупка восстановленного токарного станка 1К62.",
                            StatusId = 4
                        },
                        new
                        {
                            Id = 10,
                            ClientDisplayName = "Гомельский завод литья",
                            ClientId = "client_gomelcasting_id",
                            Cost = 32000m,
                            CreatedDate = new DateTime(2024, 5, 4, 10, 0, 0, 0, DateTimeKind.Utc),
                            ManagerComments = "Оформляются документы на продажу, ждем предоплату.",
                            ManagerId = "manager_john_doe_id",
                            OrderNumber = "ORD10",
                            ProblemDescription = "Покупка сварочного аппарата КЕМППИ MasterTig 2350.",
                            StatusId = 1
                        });
                });

            modelBuilder.Entity("WebApi.Models.OrderLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("UserDisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerName = "ООО 'МеталлПрофиль'",
                            EventDate = new DateTime(2024, 5, 2, 10, 35, 0, 0, DateTimeKind.Utc),
                            EventDescription = "Заказ создан. Зарегистрирована заявка на ремонт двигателя.",
                            ItemCode = "SRV001",
                            ItemName = "Капитальный ремонт дизельного двигателя Д-240",
                            OrderId = 1,
                            OrderNumber = "ORD01",
                            UserDisplayName = "Джон Доу (Менеджер)",
                            UserId = "manager_john_doe_id"
                        },
                        new
                        {
                            Id = 2,
                            CustomerName = "ООО 'МеталлПрофиль'",
                            EventDate = new DateTime(2024, 5, 3, 9, 10, 0, 0, DateTimeKind.Utc),
                            EventDescription = "Начаты работы по капитальному ремонту двигателя. Передан мастеру.",
                            ItemCode = "SRV001",
                            ItemName = "Начало работ по ремонту Д-240",
                            OrderId = 1,
                            OrderNumber = "ORD01",
                            UserDisplayName = "Алекс Смит (Мастер)",
                            UserId = "master_alex_smith_id"
                        },
                        new
                        {
                            Id = 3,
                            CustomerName = "ЧУП 'ГидроПрессСервис'",
                            EventDate = new DateTime(2024, 5, 11, 12, 15, 0, 0, DateTimeKind.Utc),
                            EventDescription = "Заказ создан. Зарегистрирована заявка на диагностику гидравлики.",
                            ItemCode = "SRV002",
                            ItemName = "Диагностика гидравлической системы пресса",
                            OrderId = 2,
                            OrderNumber = "ORD02",
                            UserDisplayName = "Джейн Доу (Менеджер)",
                            UserId = "manager_jane_doe_id"
                        },
                        new
                        {
                            Id = 4,
                            CustomerName = "ЧУП 'ГидроПрессСервис'",
                            EventDate = new DateTime(2024, 5, 12, 10, 30, 0, 0, DateTimeKind.Utc),
                            EventDescription = "Проведена дефектовка, выявлена необходимость замены уплотнений.",
                            ItemCode = "SRV002",
                            ItemName = "Дефектовка гидравлической системы",
                            OrderId = 2,
                            OrderNumber = "ORD02",
                            UserDisplayName = "Боб Джонсон (Мастер)",
                            UserId = "master_bob_johnson_id"
                        },
                        new
                        {
                            Id = 5,
                            CustomerName = "ОАО 'СтройМаш'",
                            EventDate = new DateTime(2024, 5, 16, 15, 5, 0, 0, DateTimeKind.Utc),
                            EventDescription = "Работы по заточке завершены. Заказ готов к выдаче.",
                            ItemCode = "SRV003",
                            ItemName = "Заточка инструмента для металлообработки",
                            OrderId = 3,
                            OrderNumber = "ORD03",
                            UserDisplayName = "Алекс Смит (Мастер)",
                            UserId = "master_alex_smith_id"
                        },
                        new
                        {
                            Id = 6,
                            CustomerName = "УП 'ПромКомплект'",
                            EventDate = new DateTime(2024, 6, 6, 9, 30, 0, 0, DateTimeKind.Utc),
                            EventDescription = "Заказ создан. Ожидание поставки запчастей для редуктора.",
                            ItemCode = "SRV004",
                            ItemName = "Ремонт редуктора крана РДК-25",
                            OrderId = 4,
                            OrderNumber = "ORD04",
                            UserDisplayName = "Джейн Доу (Менеджер)",
                            UserId = "manager_jane_doe_id"
                        },
                        new
                        {
                            Id = 7,
                            CustomerName = "УП 'ПромКомплект'",
                            EventDate = new DateTime(2024, 6, 15, 10, 0, 0, 0, DateTimeKind.Utc),
                            EventDescription = "Запчасти для редуктора получены на склад.",
                            ItemCode = "PART01",
                            ItemName = "Подшипники для редуктора",
                            OrderId = 4,
                            OrderNumber = "ORD04",
                            UserDisplayName = "Джейн Доу (Менеджер)",
                            UserId = "manager_jane_doe_id"
                        },
                        new
                        {
                            Id = 8,
                            CustomerName = "КФХ 'АгроТех'",
                            EventDate = new DateTime(2024, 6, 22, 9, 30, 0, 0, DateTimeKind.Utc),
                            EventDescription = "Дефектовка узлов и агрегатов насоса завершена. Согласование стоимости ремонта с клиентом.",
                            ItemCode = "SRV005",
                            ItemName = "Дефектовка насосного оборудования",
                            OrderId = 5,
                            OrderNumber = "ORD05",
                            UserDisplayName = "Алекс Смит (Мастер)",
                            UserId = "master_alex_smith_id"
                        },
                        new
                        {
                            Id = 9,
                            CustomerName = "ИП Иванов И.И.",
                            EventDate = new DateTime(2024, 6, 23, 10, 10, 0, 0, DateTimeKind.Utc),
                            EventDescription = "Заказ создан. Требуется оценка масштаба сварочных работ.",
                            ItemCode = "SRV006",
                            ItemName = "Сварочные работы по восстановлению конструкции",
                            OrderId = 6,
                            OrderNumber = "ORD06",
                            UserDisplayName = "Джон Доу (Менеджер)",
                            UserId = "manager_john_doe_id"
                        },
                        new
                        {
                            Id = 10,
                            CustomerName = "ОДО 'ЭлектроСистемы'",
                            EventDate = new DateTime(2024, 6, 21, 11, 0, 0, 0, DateTimeKind.Utc),
                            EventDescription = "Программный ремонт контроллера Siemens S7 завершен, проведено тестирование.",
                            ItemCode = "SRV009",
                            ItemName = "Ремонт промышленного контроллера Siemens S7",
                            OrderId = 7,
                            OrderNumber = "ORD07",
                            UserDisplayName = "Алекс Смит (Мастер)",
                            UserId = "master_alex_smith_id"
                        },
                        new
                        {
                            Id = 11,
                            CustomerName = "ЗАО 'Автоматика'",
                            EventDate = new DateTime(2024, 6, 13, 16, 15, 0, 0, DateTimeKind.Utc),
                            EventDescription = "Калибровка датчика успешно завершена. Оформлены протоколы калибровки.",
                            ItemCode = "SRV010",
                            ItemName = "Калибровка датчиков давления",
                            OrderId = 8,
                            OrderNumber = "ORD08",
                            UserDisplayName = "Боб Джонсон (Мастер)",
                            UserId = "master_bob_johnson_id"
                        },
                        new
                        {
                            Id = 12,
                            CustomerName = "СП 'РемСтройМаш'",
                            EventDate = new DateTime(2024, 4, 12, 16, 30, 0, 0, DateTimeKind.Utc),
                            EventDescription = "Заказ продажи станка создан. Согласование условий.",
                            ItemCode = "EQP001",
                            ItemName = "Токарный станок 1К62 (б/у)",
                            OrderId = 9,
                            OrderNumber = "ORD09",
                            UserDisplayName = "Джейн Доу (Менеджер)",
                            UserId = "manager_jane_doe_id"
                        },
                        new
                        {
                            Id = 13,
                            CustomerName = "СП 'РемСтройМаш'",
                            EventDate = new DateTime(2024, 4, 15, 10, 30, 0, 0, DateTimeKind.Utc),
                            EventDescription = "Токарный станок 1К62 отгружен клиенту. Оплата получена в полном объеме.",
                            ItemCode = "EQP001",
                            ItemName = "Отгрузка токарного станка 1К62",
                            OrderId = 9,
                            OrderNumber = "ORD09",
                            UserDisplayName = "Джейн Доу (Менеджер)",
                            UserId = "manager_jane_doe_id"
                        },
                        new
                        {
                            Id = 14,
                            CustomerName = "Гомельский завод литья",
                            EventDate = new DateTime(2024, 5, 4, 10, 15, 0, 0, DateTimeKind.Utc),
                            EventDescription = "Заказ продажи сварочного аппарата создан. Выставлен счет на предоплату.",
                            ItemCode = "EQP002",
                            ItemName = "Сварочный аппарат КЕМППИ MasterTig",
                            OrderId = 10,
                            OrderNumber = "ORD10",
                            UserDisplayName = "Джон Доу (Менеджер)",
                            UserId = "manager_john_doe_id"
                        });
                });

            modelBuilder.Entity("WebApi.Models.OrderService", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("OrderId", "ServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("OrderServices");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ServiceId = 1,
                            Quantity = 1,
                            UnitPrice = 15000m
                        },
                        new
                        {
                            OrderId = 1,
                            ServiceId = 14,
                            Quantity = 1,
                            UnitPrice = 1200m
                        },
                        new
                        {
                            OrderId = 2,
                            ServiceId = 2,
                            Quantity = 1,
                            UnitPrice = 1200m
                        },
                        new
                        {
                            OrderId = 3,
                            ServiceId = 3,
                            Quantity = 5,
                            UnitPrice = 300m
                        },
                        new
                        {
                            OrderId = 4,
                            ServiceId = 4,
                            Quantity = 1,
                            UnitPrice = 8000m
                        },
                        new
                        {
                            OrderId = 5,
                            ServiceId = 5,
                            Quantity = 1,
                            UnitPrice = 700m
                        },
                        new
                        {
                            OrderId = 6,
                            ServiceId = 6,
                            Quantity = 1,
                            UnitPrice = 2500m
                        },
                        new
                        {
                            OrderId = 7,
                            ServiceId = 9,
                            Quantity = 1,
                            UnitPrice = 6000m
                        },
                        new
                        {
                            OrderId = 8,
                            ServiceId = 10,
                            Quantity = 1,
                            UnitPrice = 900m
                        },
                        new
                        {
                            OrderId = 9,
                            ServiceId = 16,
                            Quantity = 1,
                            UnitPrice = 85000m
                        },
                        new
                        {
                            OrderId = 10,
                            ServiceId = 17,
                            Quantity = 1,
                            UnitPrice = 32000m
                        });
                });

            modelBuilder.Entity("WebApi.Models.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Обработка заказа"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "Производятся ремонтные услуги"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Готов к выдаче"
                        },
                        new
                        {
                            Id = 4,
                            StatusName = "Оплачено"
                        },
                        new
                        {
                            Id = 5,
                            StatusName = "Отказ"
                        });
                });

            modelBuilder.Entity("WebApi.Models.ServiceCatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ServiceCatalogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Механический ремонт",
                            CreatedAt = new DateTime(2023, 1, 15, 9, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Полная разборка, дефектовка, замена изношенных деталей и сборка двигателя Д-240 с гарантией качества.",
                            ImageUrl = "/images/service_diesel_engine.jpg",
                            Price = 15000m,
                            ServiceName = "Капитальный ремонт дизельного двигателя Д-240"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Механический ремонт",
                            CreatedAt = new DateTime(2023, 2, 10, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Комплексная проверка гидравлической системы, включая тестирование давления, поиск утечек и анализ состояния масла.",
                            ImageUrl = "/images/service_hydraulic_diag.jpg",
                            Price = 1200m,
                            ServiceName = "Диагностика гидравлической системы пресса"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Производственные услуги",
                            CreatedAt = new DateTime(2023, 3, 1, 11, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Профессиональная заточка всех видов металлообрабатывающего инструмента для повышения точности и срока службы.",
                            ImageUrl = "/images/service_tool_sharpening.jpg",
                            Price = 300m,
                            ServiceName = "Заточка инструмента для металлообработки"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Механический ремонт",
                            CreatedAt = new DateTime(2023, 4, 20, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Дефектовка, ремонт или полная замена изношенных элементов редуктора крана РДК-25 с последующей проверкой на стенде.",
                            ImageUrl = "/images/service_crane_reducer.jpg",
                            Price = 8000m,
                            ServiceName = "Ремонт редуктора крана РДК-25"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Производственные услуги",
                            CreatedAt = new DateTime(2023, 5, 5, 13, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Визуальный осмотр, инструментальный контроль и диагностика для выявления дефектов и определения объема ремонтных работ.",
                            ImageUrl = "/images/service_defectoscopy.jpg",
                            Price = 700m,
                            ServiceName = "Дефектовка узлов и агрегатов"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Производственные услуги",
                            CreatedAt = new DateTime(2023, 6, 12, 14, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Восстановление целостности металлических конструкций с использованием различных методов сварки.",
                            ImageUrl = "/images/service_welding.jpg",
                            Price = 2500m,
                            ServiceName = "Сварочные работы по восстановлению конструкции"
                        },
                        new
                        {
                            Id = 7,
                            Category = "Механический ремонт",
                            CreatedAt = new DateTime(2023, 7, 1, 15, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Регулярное техническое обслуживание, чистка, смазка и замена изношенных элементов насосов для предотвращения поломок.",
                            ImageUrl = "/images/service_pump_maintenance.jpg",
                            Price = 1800m,
                            ServiceName = "Обслуживание насосного оборудования"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Производственные услуги",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Динамическая и статическая балансировка вращающихся частей оборудования для снижения вибрации и увеличения срока службы.",
                            ImageUrl = "/images/service_balancing.jpg",
                            Price = 3200m,
                            ServiceName = "Балансировка роторов и валов"
                        },
                        new
                        {
                            Id = 9,
                            Category = "Электрооборудование",
                            CreatedAt = new DateTime(2023, 9, 1, 9, 30, 0, 0, DateTimeKind.Utc),
                            Description = "Диагностика, ремонт электронных компонентов и программного обеспечения контроллеров Siemens S7.",
                            ImageUrl = "/images/service_siemens_plc.jpg",
                            Price = 6000m,
                            ServiceName = "Ремонт промышленного контроллера Siemens S7"
                        },
                        new
                        {
                            Id = 10,
                            Category = "Электрооборудование",
                            CreatedAt = new DateTime(2023, 10, 15, 10, 30, 0, 0, DateTimeKind.Utc),
                            Description = "Выверка и настройка датчиков давления в соответствии с эталонными стандартами.",
                            ImageUrl = "/images/service_pressure_sensor.jpg",
                            Price = 900m,
                            ServiceName = "Калибровка датчиков давления"
                        },
                        new
                        {
                            Id = 11,
                            Category = "Электрооборудование",
                            CreatedAt = new DateTime(2023, 11, 1, 11, 30, 0, 0, DateTimeKind.Utc),
                            Description = "Комплексное обслуживание систем автоматизации, включая проверку проводки, настройку датчиков и обновление ПО.",
                            ImageUrl = "/images/service_automation.jpg",
                            Price = 4000m,
                            ServiceName = "Обслуживание систем автоматизации"
                        },
                        new
                        {
                            Id = 12,
                            Category = "Запчасти и материалы",
                            CreatedAt = new DateTime(2023, 1, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Высококачественный шарикоподшипник с двухсторонним металлическим уплотнением для различных механизмов.",
                            ImageUrl = "/images/part_bearing.jpg",
                            Price = 150m,
                            ServiceName = "Подшипник скольжения 6205 ZZ"
                        },
                        new
                        {
                            Id = 13,
                            Category = "Запчасти и материалы",
                            CreatedAt = new DateTime(2023, 1, 1, 8, 5, 0, 0, DateTimeKind.Utc),
                            Description = "Высокопрочная гидравлическая манжета для герметизации соединений в условиях высокого давления.",
                            ImageUrl = "/images/part_seal.jpg",
                            Price = 80m,
                            ServiceName = "Уплотнительная манжета 80x100x10"
                        },
                        new
                        {
                            Id = 14,
                            Category = "Запчасти и материалы",
                            CreatedAt = new DateTime(2023, 1, 1, 8, 10, 0, 0, DateTimeKind.Utc),
                            Description = "Полный набор высококачественных прокладок, необходимый для капитального ремонта дизельного двигателя Д-240.",
                            ImageUrl = "/images/part_gasket_set.jpg",
                            Price = 1200m,
                            ServiceName = "Комплект прокладок для двигателя Д-240"
                        },
                        new
                        {
                            Id = 15,
                            Category = "Запчасти и материалы",
                            CreatedAt = new DateTime(2023, 1, 1, 8, 15, 0, 0, DateTimeKind.Utc),
                            Description = "Медный силовой кабель с пониженным дымо- и газовыделением, огнестойкий, для прокладки внутри помещений.",
                            ImageUrl = "/images/part_cable.jpg",
                            Price = 250m,
                            ServiceName = "Кабель силовой ВВГнг-LS 3х2.5"
                        },
                        new
                        {
                            Id = 16,
                            Category = "Промышленное оборудование",
                            CreatedAt = new DateTime(2023, 1, 1, 9, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Восстановленный универсальный токарно-винторезный станок 1К62, полностью готов к эксплуатации, после капитального ремонта.",
                            ImageUrl = "/images/equipment_lathe.jpg",
                            Price = 85000m,
                            ServiceName = "Токарный станок 1К62 (б/у)",
                            UpdatedAt = new DateTime(2023, 3, 20, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 17,
                            Category = "Промышленное оборудование",
                            CreatedAt = new DateTime(2023, 2, 1, 9, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Профессиональный сварочный аппарат для аргонодуговой сварки (TIG) и ручной дуговой сварки (MMA), с полным комплектом оснастки.",
                            ImageUrl = "/images/equipment_welder.jpg",
                            Price = 32000m,
                            ServiceName = "Сварочный аппарат КЕМППИ MasterTig"
                        });
                });

            modelBuilder.Entity("WebApi.Models.Order", b =>
                {
                    b.HasOne("WebApi.Models.OrderStatus", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("WebApi.Models.OrderLog", b =>
                {
                    b.HasOne("WebApi.Models.Order", "Order")
                        .WithMany("OrderLogs")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("WebApi.Models.OrderService", b =>
                {
                    b.HasOne("WebApi.Models.Order", "Order")
                        .WithMany("OrderServices")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.ServiceCatalog", "Service")
                        .WithMany("OrderServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("WebApi.Models.Order", b =>
                {
                    b.Navigation("OrderLogs");

                    b.Navigation("OrderServices");
                });

            modelBuilder.Entity("WebApi.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebApi.Models.ServiceCatalog", b =>
                {
                    b.Navigation("OrderServices");
                });
#pragma warning restore 612, 618
        }
    }
}
